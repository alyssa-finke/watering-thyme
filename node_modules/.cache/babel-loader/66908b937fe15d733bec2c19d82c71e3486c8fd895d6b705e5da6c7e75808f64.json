{"ast":null,"code":"var _jsxFileName = \"/Users/alyssafinke/Projects/watering-thyme/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Plants from './components/Plants/Plants';\nimport NewPlant from './components/NewPlant/NewPlant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialPlants = [{\n  id: 1,\n  name: 'Pothos',\n  firstWater: new Date(2023, 5, 1),\n  frequency: '1'\n}, {\n  id: 2,\n  name: 'Money Tree',\n  firstWater: new Date(2023, 5, 1),\n  frequency: '1'\n}, {\n  id: 3,\n  name: 'Snake Plant',\n  firstWater: new Date(2023, 5, 1),\n  frequency: '1'\n}, {\n  id: 4,\n  name: 'Succulent',\n  firstWater: new Date(2022, 5, 1),\n  frequency: '1'\n}];\nconst App = () => {\n  _s();\n  // const initialPlants = [\n  //   { name: 'Pothos', firstWater: new Date(2023, 5, 1), frequency: 'once a week' },\n  //   { name: 'Money Tree', firstWater: new Date(2023, 5, 1), frequency: 'once a week' },\n  //   { name: 'Snake Plant', firstWater: new Date(2023, 5, 1), frequency: 'once a week' },\n  //   { name: 'Succulent', firstWater: new Date(2022, 5, 1), frequency: 'twice a week' }\n  // ];\n\n  const [plantInfo, setNewPlant] = useState(initialPlants);\n  const [show, toggleShow] = useState(false);\n  const addPlantHandler = plant => {\n    console.log('In App.js');\n    console.log(plant);\n    setNewPlant(prevPlants => {\n      return [plant, ...prevPlants];\n    });\n    console.log(plantInfo);\n  };\n  const showForm = event => {\n    console.log('It worked!');\n    // if(this.show == false) {\n    //   <NewPlant></NewPlant>\n    // });\n\n    //   toggleShow(!show)\n    //   show ? <NewPlant onAddPlant={addPlantHandler} /> : \"\"\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Thyme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-plant-submit\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleShow(true),\n        children: \"Add Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), \"show?\", /*#__PURE__*/_jsxDEV(NewPlant, {\n      onAddPlant: addPlantHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this), \" : null\", /*#__PURE__*/_jsxDEV(Plants, {\n      plants: plantInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"du/ykRVTNi5y8Bb670V0iopF+OI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Plants","NewPlant","jsxDEV","_jsxDEV","initialPlants","id","name","firstWater","Date","frequency","App","_s","plantInfo","setNewPlant","show","toggleShow","addPlantHandler","plant","console","log","prevPlants","showForm","event","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onAddPlant","plants","_c","$RefreshReg$"],"sources":["/Users/alyssafinke/Projects/watering-thyme/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Plants from './components/Plants/Plants'\nimport NewPlant from './components/NewPlant/NewPlant';\n\nconst initialPlants = [\n  { id: 1, name: 'Pothos', firstWater: new Date(2023, 5, 1), frequency: '1' },\n  { id: 2, name: 'Money Tree', firstWater: new Date(2023, 5, 1), frequency: '1' },\n  { id: 3, name: 'Snake Plant', firstWater: new Date(2023, 5, 1), frequency: '1' },\n  { id: 4, name: 'Succulent', firstWater: new Date(2022, 5, 1), frequency: '1' }\n];\n\nconst App = () => {\n  // const initialPlants = [\n  //   { name: 'Pothos', firstWater: new Date(2023, 5, 1), frequency: 'once a week' },\n  //   { name: 'Money Tree', firstWater: new Date(2023, 5, 1), frequency: 'once a week' },\n  //   { name: 'Snake Plant', firstWater: new Date(2023, 5, 1), frequency: 'once a week' },\n  //   { name: 'Succulent', firstWater: new Date(2022, 5, 1), frequency: 'twice a week' }\n  // ];\n\n  const [plantInfo, setNewPlant] = useState(initialPlants);\n  const [show, toggleShow] = useState(false);\n\n  const addPlantHandler = (plant) => {\n    console.log('In App.js')\n    console.log(plant);\n    setNewPlant((prevPlants) => {\n      return [plant, ...prevPlants];\n    });\n    console.log(plantInfo);\n  };\n\n  const showForm = (event) => {\n    console.log('It worked!');\n    // if(this.show == false) {\n    //   <NewPlant></NewPlant>\n    // });\n\n    //   toggleShow(!show)\n    //   show ? <NewPlant onAddPlant={addPlantHandler} /> : \"\"\n    // }\n\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Thyme</h1>\n      </header>\n      <div className=\"new-plant-submit\">\n        <button onClick={() => toggleShow(true)}>Add Plant</button>\n      </div>\n      show?<NewPlant onAddPlant={addPlantHandler} /> : null\n      <Plants plants={plantInfo} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}